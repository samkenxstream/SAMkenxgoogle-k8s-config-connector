//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2020 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** DISCLAIMER ***
// Config Connector's go-client for CRDs is currently in ALPHA, which means
// that future versions of the go-client may include breaking changes.
// Please try it out and give us feedback!

// Code generated by main. DO NOT EDIT.

package v1beta1

import (
	v1alpha1 "github.com/GoogleCloudPlatform/k8s-config-connector/pkg/clients/generated/apis/k8s/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunService) DeepCopyInto(out *RunService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunService.
func (in *RunService) DeepCopy() *RunService {
	if in == nil {
		return nil
	}
	out := new(RunService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RunService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunServiceList) DeepCopyInto(out *RunServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RunService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunServiceList.
func (in *RunServiceList) DeepCopy() *RunServiceList {
	if in == nil {
		return nil
	}
	out := new(RunServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RunServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunServiceSpec) DeepCopyInto(out *RunServiceSpec) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.BinaryAuthorization != nil {
		in, out := &in.BinaryAuthorization, &out.BinaryAuthorization
		*out = new(ServiceBinaryAuthorization)
		(*in).DeepCopyInto(*out)
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.ClientVersion != nil {
		in, out := &in.ClientVersion, &out.ClientVersion
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = new(string)
		**out = **in
	}
	if in.LaunchStage != nil {
		in, out := &in.LaunchStage, &out.LaunchStage
		*out = new(string)
		**out = **in
	}
	out.ProjectRef = in.ProjectRef
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	in.Template.DeepCopyInto(&out.Template)
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = make([]ServiceTraffic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunServiceSpec.
func (in *RunServiceSpec) DeepCopy() *RunServiceSpec {
	if in == nil {
		return nil
	}
	out := new(RunServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunServiceStatus) DeepCopyInto(out *RunServiceStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1alpha1.Condition, len(*in))
		copy(*out, *in)
	}
	if in.CreateTime != nil {
		in, out := &in.CreateTime, &out.CreateTime
		*out = new(string)
		**out = **in
	}
	if in.Creator != nil {
		in, out := &in.Creator, &out.Creator
		*out = new(string)
		**out = **in
	}
	if in.DeleteTime != nil {
		in, out := &in.DeleteTime, &out.DeleteTime
		*out = new(string)
		**out = **in
	}
	if in.Etag != nil {
		in, out := &in.Etag, &out.Etag
		*out = new(string)
		**out = **in
	}
	if in.ExpireTime != nil {
		in, out := &in.ExpireTime, &out.ExpireTime
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LastModifier != nil {
		in, out := &in.LastModifier, &out.LastModifier
		*out = new(string)
		**out = **in
	}
	if in.LatestCreatedRevision != nil {
		in, out := &in.LatestCreatedRevision, &out.LatestCreatedRevision
		*out = new(string)
		**out = **in
	}
	if in.LatestReadyRevision != nil {
		in, out := &in.LatestReadyRevision, &out.LatestReadyRevision
		*out = new(string)
		**out = **in
	}
	if in.ObservedGeneration != nil {
		in, out := &in.ObservedGeneration, &out.ObservedGeneration
		*out = new(int)
		**out = **in
	}
	if in.Reconciling != nil {
		in, out := &in.Reconciling, &out.Reconciling
		*out = new(bool)
		**out = **in
	}
	if in.ResourceGeneration != nil {
		in, out := &in.ResourceGeneration, &out.ResourceGeneration
		*out = new(int)
		**out = **in
	}
	if in.TerminalCondition != nil {
		in, out := &in.TerminalCondition, &out.TerminalCondition
		*out = new(ServiceTerminalConditionStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.TrafficStatuses != nil {
		in, out := &in.TrafficStatuses, &out.TrafficStatuses
		*out = make([]ServiceTrafficStatusesStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Uid != nil {
		in, out := &in.Uid, &out.Uid
		*out = new(string)
		**out = **in
	}
	if in.UpdateTime != nil {
		in, out := &in.UpdateTime, &out.UpdateTime
		*out = new(string)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunServiceStatus.
func (in *RunServiceStatus) DeepCopy() *RunServiceStatus {
	if in == nil {
		return nil
	}
	out := new(RunServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceBinaryAuthorization) DeepCopyInto(out *ServiceBinaryAuthorization) {
	*out = *in
	if in.BreakglassJustification != nil {
		in, out := &in.BreakglassJustification, &out.BreakglassJustification
		*out = new(string)
		**out = **in
	}
	if in.UseDefault != nil {
		in, out := &in.UseDefault, &out.UseDefault
		*out = new(bool)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceBinaryAuthorization.
func (in *ServiceBinaryAuthorization) DeepCopy() *ServiceBinaryAuthorization {
	if in == nil {
		return nil
	}
	out := new(ServiceBinaryAuthorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceCloudSqlInstance) DeepCopyInto(out *ServiceCloudSqlInstance) {
	*out = *in
	if in.Instances != nil {
		in, out := &in.Instances, &out.Instances
		*out = make([]v1alpha1.ResourceRef, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceCloudSqlInstance.
func (in *ServiceCloudSqlInstance) DeepCopy() *ServiceCloudSqlInstance {
	if in == nil {
		return nil
	}
	out := new(ServiceCloudSqlInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceContainers) DeepCopyInto(out *ServiceContainers) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Command != nil {
		in, out := &in.Command, &out.Command
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]ServiceEnv, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]ServicePorts, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new(ServiceResources)
		(*in).DeepCopyInto(*out)
	}
	if in.VolumeMounts != nil {
		in, out := &in.VolumeMounts, &out.VolumeMounts
		*out = make([]ServiceVolumeMounts, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceContainers.
func (in *ServiceContainers) DeepCopy() *ServiceContainers {
	if in == nil {
		return nil
	}
	out := new(ServiceContainers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceEnv) DeepCopyInto(out *ServiceEnv) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueSource != nil {
		in, out := &in.ValueSource, &out.ValueSource
		*out = new(ServiceValueSource)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceEnv.
func (in *ServiceEnv) DeepCopy() *ServiceEnv {
	if in == nil {
		return nil
	}
	out := new(ServiceEnv)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceItems) DeepCopyInto(out *ServiceItems) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(int)
		**out = **in
	}
	if in.VersionRef != nil {
		in, out := &in.VersionRef, &out.VersionRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceItems.
func (in *ServiceItems) DeepCopy() *ServiceItems {
	if in == nil {
		return nil
	}
	out := new(ServiceItems)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicePorts) DeepCopyInto(out *ServicePorts) {
	*out = *in
	if in.ContainerPort != nil {
		in, out := &in.ContainerPort, &out.ContainerPort
		*out = new(int)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicePorts.
func (in *ServicePorts) DeepCopy() *ServicePorts {
	if in == nil {
		return nil
	}
	out := new(ServicePorts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceResources) DeepCopyInto(out *ServiceResources) {
	*out = *in
	if in.CpuIdle != nil {
		in, out := &in.CpuIdle, &out.CpuIdle
		*out = new(bool)
		**out = **in
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceResources.
func (in *ServiceResources) DeepCopy() *ServiceResources {
	if in == nil {
		return nil
	}
	out := new(ServiceResources)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceScaling) DeepCopyInto(out *ServiceScaling) {
	*out = *in
	if in.MaxInstanceCount != nil {
		in, out := &in.MaxInstanceCount, &out.MaxInstanceCount
		*out = new(int)
		**out = **in
	}
	if in.MinInstanceCount != nil {
		in, out := &in.MinInstanceCount, &out.MinInstanceCount
		*out = new(int)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceScaling.
func (in *ServiceScaling) DeepCopy() *ServiceScaling {
	if in == nil {
		return nil
	}
	out := new(ServiceScaling)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceSecret) DeepCopyInto(out *ServiceSecret) {
	*out = *in
	if in.DefaultMode != nil {
		in, out := &in.DefaultMode, &out.DefaultMode
		*out = new(int)
		**out = **in
	}
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceItems, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.SecretRef = in.SecretRef
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceSecret.
func (in *ServiceSecret) DeepCopy() *ServiceSecret {
	if in == nil {
		return nil
	}
	out := new(ServiceSecret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTemplate) DeepCopyInto(out *ServiceTemplate) {
	*out = *in
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ContainerConcurrency != nil {
		in, out := &in.ContainerConcurrency, &out.ContainerConcurrency
		*out = new(int)
		**out = **in
	}
	if in.Containers != nil {
		in, out := &in.Containers, &out.Containers
		*out = make([]ServiceContainers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExecutionEnvironment != nil {
		in, out := &in.ExecutionEnvironment, &out.ExecutionEnvironment
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.Scaling != nil {
		in, out := &in.Scaling, &out.Scaling
		*out = new(ServiceScaling)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceAccountRef != nil {
		in, out := &in.ServiceAccountRef, &out.ServiceAccountRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]ServiceVolumes, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpcAccess != nil {
		in, out := &in.VpcAccess, &out.VpcAccess
		*out = new(ServiceVpcAccess)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTemplate.
func (in *ServiceTemplate) DeepCopy() *ServiceTemplate {
	if in == nil {
		return nil
	}
	out := new(ServiceTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTerminalConditionStatus) DeepCopyInto(out *ServiceTerminalConditionStatus) {
	*out = *in
	if in.JobReason != nil {
		in, out := &in.JobReason, &out.JobReason
		*out = new(string)
		**out = **in
	}
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = new(string)
		**out = **in
	}
	if in.Message != nil {
		in, out := &in.Message, &out.Message
		*out = new(string)
		**out = **in
	}
	if in.Reason != nil {
		in, out := &in.Reason, &out.Reason
		*out = new(string)
		**out = **in
	}
	if in.RevisionReason != nil {
		in, out := &in.RevisionReason, &out.RevisionReason
		*out = new(string)
		**out = **in
	}
	if in.Severity != nil {
		in, out := &in.Severity, &out.Severity
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTerminalConditionStatus.
func (in *ServiceTerminalConditionStatus) DeepCopy() *ServiceTerminalConditionStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceTerminalConditionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTraffic) DeepCopyInto(out *ServiceTraffic) {
	*out = *in
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(int)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTraffic.
func (in *ServiceTraffic) DeepCopy() *ServiceTraffic {
	if in == nil {
		return nil
	}
	out := new(ServiceTraffic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceTrafficStatusesStatus) DeepCopyInto(out *ServiceTrafficStatusesStatus) {
	*out = *in
	if in.Percent != nil {
		in, out := &in.Percent, &out.Percent
		*out = new(int)
		**out = **in
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(string)
		**out = **in
	}
	if in.Tag != nil {
		in, out := &in.Tag, &out.Tag
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Uri != nil {
		in, out := &in.Uri, &out.Uri
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceTrafficStatusesStatus.
func (in *ServiceTrafficStatusesStatus) DeepCopy() *ServiceTrafficStatusesStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceTrafficStatusesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceValueSource) DeepCopyInto(out *ServiceValueSource) {
	*out = *in
	if in.SecretKeyRef != nil {
		in, out := &in.SecretKeyRef, &out.SecretKeyRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceValueSource.
func (in *ServiceValueSource) DeepCopy() *ServiceValueSource {
	if in == nil {
		return nil
	}
	out := new(ServiceValueSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceVolumeMounts) DeepCopyInto(out *ServiceVolumeMounts) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceVolumeMounts.
func (in *ServiceVolumeMounts) DeepCopy() *ServiceVolumeMounts {
	if in == nil {
		return nil
	}
	out := new(ServiceVolumeMounts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceVolumes) DeepCopyInto(out *ServiceVolumes) {
	*out = *in
	if in.CloudSqlInstance != nil {
		in, out := &in.CloudSqlInstance, &out.CloudSqlInstance
		*out = new(ServiceCloudSqlInstance)
		(*in).DeepCopyInto(*out)
	}
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(ServiceSecret)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceVolumes.
func (in *ServiceVolumes) DeepCopy() *ServiceVolumes {
	if in == nil {
		return nil
	}
	out := new(ServiceVolumes)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceVpcAccess) DeepCopyInto(out *ServiceVpcAccess) {
	*out = *in
	if in.ConnectorRef != nil {
		in, out := &in.ConnectorRef, &out.ConnectorRef
		*out = new(v1alpha1.ResourceRef)
		**out = **in
	}
	if in.Egress != nil {
		in, out := &in.Egress, &out.Egress
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceVpcAccess.
func (in *ServiceVpcAccess) DeepCopy() *ServiceVpcAccess {
	if in == nil {
		return nil
	}
	out := new(ServiceVpcAccess)
	in.DeepCopyInto(out)
	return out
}
